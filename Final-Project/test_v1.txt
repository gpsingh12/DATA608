import dash
import dash_core_components as dcc
import dash_html_components as html
import dash_table  as dt
import pandas as pd

from plotly import graph_objs as go
from plotly.graph_objs import *
from dash.dependencies import Input, Output, State 


app = dash.Dash(__name__)
server = app.server
app.title = 'FDNY VIOLATIONS'



# API keys and datasets
mapbox_access_token = 'pk.eyJ1IjoiZ3BzaW5naDEyIiwiYSI6ImNrMzNhanQ2ZjBqODMzaW1tbHRxNHBqa20ifQ.ewLqQWO3g2TNM-8NpFhcxw'
df = pd.read_csv("https://raw.githubusercontent.com/gpsingh12/DATA608/master/Final-Project/fdny_vio.csv")

# Selecting only required columns
df1 = df[['BOROUGH', 'LATITUDE', 'LONGITUDE', 'ACCT_NUM', 'ACCT_OWNER']]


#drop null values

map_data=df1.dropna()

external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']
app = dash.Dash(__name__, external_stylesheets=external_stylesheets)
server = app.server
colors = {
    'background': '#111111',
    'text': '#7FDBFF'
}


layout_map = dict(
    autosize=True,
    height=500,
    font=dict(color="#191A1A"),
    titlefont=dict(color="#191A1A", size='14'),
    margin=dict(
        l=35,
        r=35,
        b=35,
        t=45
    ),
    hovermode="closest",
    plot_bgcolor='#fffcfc',
    paper_bgcolor='#fffcfc',
    legend=dict(font=dict(size=10), orientation='h'),
    title='FDNY OPEN VIOLATIONS',
    mapbox=dict(
        accesstoken=mapbox_access_token,
        style="satellite-streets",
        center=dict(
            lon=-73.91251,
            lat=40.7342
        ),
        zoom=9,
    )
)



app.layout = html.Div([
    html.H2('FDNY VIOLATIONS'),
    html.Label("Select a BOROUGH"),
    dcc.Dropdown(
        id='dropdown',
        options=[{'label': i, 'value': i} for i in map_data.BOROUGH.unique()],
        value='BX',
        style={'width':'50%'}
    ),
    html.Div(id='display-value'),
    dcc.Graph( id="output-graph"),
        ], className = "six columns")

@app.callback(dash.dependencies.Output('output-graph', 'figure'),
              [dash.dependencies.Input('dropdown', 'value')])


def update_value(value):
    test = map_data[map_data['BOROUGH']==value]

    return({'data': [
        {'lat': test.LATITUDE, 'lon': test.LONGITUDE, 'type': 'scattermapbox',
        'hoverinfo': 'text',
        'hovertext': [["ACCT_OWNER: {} <br>ACCT_NUM: {} <br>".format(i,j,)]
                                for i,j in zip(test['ACCT_OWNER'], test['ACCT_NUM'])]},
        
       ],
        'layout': layout_map
        }
    )

if __name__ == '__main__':
    app.run_server(debug=False)